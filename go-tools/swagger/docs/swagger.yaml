basePath: /api/v1
definitions:
  model.CreateUserRequest:
    properties:
      age:
        example: 25
        maximum: 150
        minimum: 1
        type: integer
      email:
        example: zhangsan@example.com
        type: string
      name:
        example: 张三
        type: string
    required:
    - age
    - email
    - name
    type: object
  model.UpdateUserRequest:
    properties:
      age:
        example: 30
        maximum: 150
        minimum: 1
        type: integer
      email:
        example: lisi@example.com
        type: string
      name:
        example: 李四
        type: string
    type: object
  model.User:
    properties:
      age:
        example: 25
        type: integer
      created_at:
        type: string
      email:
        example: zhangsan@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: 张三
        type: string
      updated_at:
        type: string
    type: object
  model.UserListResponse:
    properties:
      total:
        example: 100
        type: integer
      users:
        items:
          $ref: '#/definitions/model.User'
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for Swagger documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Demo API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: 获取所有用户的列表，支持分页
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserListResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 获取用户列表
      tags:
      - users
    post:
      consumes:
      - application/json
      description: 创建新用户
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 创建用户
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: 根据用户ID删除用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: 删除用户
      tags:
      - users
    get:
      consumes:
      - application/json
      description: 根据用户ID获取用户详细信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: 获取单个用户
      tags:
      - users
    put:
      consumes:
      - application/json
      description: 根据用户ID更新用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: 更新用户
      tags:
      - users
swagger: "2.0"
